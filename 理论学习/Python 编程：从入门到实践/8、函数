# 1. 定义函数

```python
def greet_user():❶
    """显示简单的问候语""" ❷
    print("Hello!") ❸
greet_user() ❹
```



# 2. 函数传参

向函数传递实参的方式很多，可使用位置实参，这要求实参的顺序与形参的顺序相同；也可使用关键字实参，其中每个实参都由变量名和值组成；还可使用列表和字典。



## 2.1 位置实参

就是按照函数已定义好的固定顺序传参

```python
def describe_pet(animal_type,pet_name):
    """显示宠物的信息"""
    print("\nI have a "+animal_type+".")
    print("My "+animal_type+"'s name is "+pet_name.title()+".")
describe_pet('hamster','harry') 
```

这样函数调用时，`animal_type==hamster` , `pet_name==harry`



## 2.2 关键字传参

- 关键字传入就是传递给函数时的形式就是一组键值对，通过在实参中将名称和值关联起来，因此函数不会根据顺序来决定键对应的值

  ```python
  def describe_pet(animal_type,pet_name):
      """显示宠物的信息"""
      print("\nI have a "+animal_type+".")
      print("My "+animal_type+"'s name is "+pet_name.title()+".")
  describe_pet(animal_type='hamster',pet_name='harry')
  ```

  

- 关键字传参中，就可以不关心形参顺序了，所以以下两个函数调用是相等的

  ```py
  describe_pet(animal_type='hamster',pet_name='harry')
  describe_pet(pet_name='harry',animal_type='hamster')
  ```

  

## 2.3 函数参数默认值

- 编写函数时，可给每个形参指定默认值。在调用函数中给形参提供了实参时，Python将使用指定的实参值；否则，将使用形参的默认值

  ```py
  def describe_pet(pet_name,animal_type='dog'):
      """显示宠物的信息"""
      print("\nI have a "+animal_type+".")
      print("My "+animal_type+"'s name is "+pet_name.title()+".")
  describe_pet(pet_name='willie')
  ```

值得注意的是：

- 有默认值的形参应该写在后面
- 这种情况下，调用函数时必须知道 pet_name 的值



附习题：

```python
def make_shirt(size,content="I love python"):
    print("the t-shirt's size is "+size,"and the content is "+content)

make_shirt('m','location')
make_shirt(content='hello python',size='s')
make_shirt('XL')
make_shirt('s','hello ceph')
```



